{"version":3,"sources":["../../src/server/index.js"],"names":[],"mappings":";;;;;;;;oBAAiB,MAAM;;;;sBACT,QAAQ;;;;uBACF,SAAS;;;;0BACN,aAAa;;;;qBAClB,UAAU;;;;+BACP,qBAAqB;;;;4BACvB,kBAAkB;;;;wBAChB,aAAa;;;;uBACd,YAAY;;;;mBAChB,QAAQ;;;;uBACA,eAAe;;;;iCACf,uBAAuB;;;;mBAC/B,QAAQ;;;;AAEjB,IAAM,GAAG,GAAG,2BAAS,CAAC;QAAhB,GAAG,GAAH,GAAG;AACT,IAAM,MAAM,GAAG,kBAAK,MAAM,CAAC,GAAG,CAAC,CAAC;QAA1B,MAAM,GAAN,MAAM;qBACJ,MAAM;;AAErB,GAAG,CAAC,GAAG,CAAC,wBAAW,IAAI,EAAE,CAAC,CAAC;;AAE3B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACzB,MAAI,KAAK,8BAA4B,qBAAY,OAAO,AAAE,CAAC;;AAE3D,MAAI,WAAW,GAAG,oBAAE,GAAG,CAAC,sBAAS,QAAQ,EAAE,UAAC,OAAO,EAAE,GAAG,EAAK;AAC3D,oBAAc,GAAG,iBAAY,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,WAAQ;GAC3E,CAAC,CAAC;AACH,MAAI,SAAS,GAAG,oBAAE,GAAG,CAAC,0BAAO,MAAM,EAAE,UAAC,KAAK,EAAE,GAAG,EAAK;AACnD,kCAEI,GAAG,iBAAY,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,uBAE/C;GACH,CAAC,CAAC;AACH,KAAG,CAAC,GAAG,uCAGI,KAAK,+CAGR,KAAK,sDAEJ,IAAI,CAAC,SAAS,+BAAW,IAAI,EAAE,CAAC,CAAC,+CAElC,WAAW,4CAEX,SAAS,qCAGf,CAAC;CACJ,CAAC,CAAC;;AAEH,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAC/B,MAAI,IAAI,GAAG,0BAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7B,MAAI,MAAM,GAAG,sBAAI,cAAc,EAAE,IAAI,CAAC,CAAC;AACvC,QAAM,2BAAyB,IAAI,CAAC,SAAS,CAAG,CAAC;;AAEjD,0BAAM,IAAI,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AACzB,QAAI;AACF,SAAG,CAAC,IAAI,CAAC,oCAAY,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KAClC,CAAC,OAAM,IAAI,EAAE;AACZ,eAAQ;KACT;GACF,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,iBAAI,WAAW,CAAC,MAAM,CAAC,CAAC","file":"index.js","sourcesContent":["import http from 'http';\nimport _ from 'lodash';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport build from '../build';\nimport defaults from '../options/defaults';\nimport caches from '../caches/caches';\nimport wrappers from '../wrappers';\nimport options from '../options';\nimport log from '../log';\nimport packageJson from '../../package';\nimport processData from '../utils/process_data';\nimport hmr from '../hmr';\n\nexport const app = express();\nexport const server = http.Server(app);\nexport default server;\n\napp.use(bodyParser.json());\n\napp.get('/', (req, res) => {\n  let title = `webpack-build-server v${packageJson.version}`;\n\n  let wrapperList = _.map(wrappers.wrappers, (wrapper, key) => {\n    return `<li>${key} &mdash; ${JSON.stringify(wrapper.opts, null, 2)}</li>`;\n  });\n  let cacheList = _.map(caches.caches, (cache, key) => {\n    return `\n    <li>\n      ${key} &mdash; ${JSON.stringify(cache, null, 2)}\n    </li>\n    `;\n  });\n  res.end(`\n  <html>\n  <head>\n    <title>${title}</title>\n  </head>\n  <body>\n    <h1>${title}</h1>\n    <h2>Default options</h2>\n    <pre>${JSON.stringify(defaults, null, 2)}</pre>\n    <h2>Wrappers</h2>\n    <ul>${wrapperList}</ul>\n    <h2>Caches</h2>\n    <ul>${cacheList}</ul>\n  </body>\n  </html>\n  `);\n});\n\napp.post('/build', (req, res) => {\n  let opts = options(req.body);\n  let logger = log('build-server', opts);\n  logger(`request received for ${opts.buildHash}`);\n\n  build(opts, (err, data) => {\n    try {\n      res.json(processData(err, data));\n    } catch(_err) {\n      debugger\n    }\n  });\n});\n\nhmr.addToServer(server);"]}
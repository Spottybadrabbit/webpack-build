{"version":3,"sources":["../../src/server/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import http from 'http';\nimport _ from 'lodash';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport build from '../build';\nimport defaults from '../options/defaults';\nimport caches from '../cache/caches';\nimport wrappers from '../wrappers';\nimport options from '../options';\nimport log from '../log';\nimport packageJson from '../../package';\nimport cache from '../cache';\nimport processData from '../utils/process_data';\nimport workers from '../workers';\nimport hmr from '../hmr';\n\nlet app = express();\nlet server = http.Server(app);\n\napp.use(bodyParser.json());\napp.use(middleware);\n\napp.get('/', (req, res) => {\n  let title = `webpack-build-server v${packageJson.version}`;\n\n  let wrapperList = _.map(wrappers.wrappers, (wrapper, key) => {\n    return `<li>${key} &mdash; ${JSON.stringify(wrapper.opts, null, 2)}</li>`;\n  });\n  let cacheList = _.map(caches.caches, (cache, key) => {\n    return `\n    <li>\n      ${key} &mdash; ${JSON.stringify(cache, null, 2)}\n    </li>\n    `;\n  });\n  res.end(`\n  <html>\n  <head>\n    <title>${title}</title>\n  </head>\n  <body>\n    <h1>${title}</h1>\n    <h2>Default options</h2>\n    <pre>${JSON.stringify(defaults, null, 2)}</pre>\n    <h2>Wrappers</h2>\n    <ul>${wrapperList}</ul>\n    <h2>Caches</h2>\n    <ul>${cacheList}</ul>\n  </body>\n  </html>\n  `);\n});\n\napp.post('/', (req, res) => {\n  let opts = options(req.body);\n  let logger = log('build-server', opts);\n\n  let workerOpts = _.cloneDeep(opts);\n  workerOpts.cache = false;\n\n  // TODO fix hmr\n  // TODO prevent workers from accessing the cache\n\n  let emit = (err, data) => {\n    if (err) {\n      logger('error encountered during build', err);\n      return res.status(500).end(err.stack);\n    } else {\n      logger('serving data from build');\n      return res.json(data);\n    }\n  };\n\n  logger('checking cache');\n  cache.get(opts, (err, cachedData) => {\n    if (err) {\n      logger(`cache error: ${err}`);\n    }\n\n    if (cachedData) {\n      logger('cached data received');\n      emit(null, processData(null, cachedData));\n    } else {\n      logger('cache has no matching data or has delegated, calling worker');\n    }\n\n    if (!cachedData || opts.watch) {\n      logger('submitting build request to worker');\n      send(workerOpts, (err, data) => {\n        logger('populating cache');\n        if (err) logger(`worker error: ${err}`);\n\n        if (data) {\n          let {error: buildError, data: buildData} = data;\n\n          if (buildError) {\n            logger(`worker build error: ${buildError}`);\n            cache.set(opts, null);\n          } else {\n            cache.set(opts, buildData, opts.watch);\n          }\n        }\n\n        if (!cachedData) {\n          emit(err, data);\n        }\n      });\n    }\n  });\n});\n\nhmr.addToServer(server);\n\nexport default server;"]}
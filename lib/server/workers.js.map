{"version":3,"sources":["../../src/server/workers.js"],"names":[],"mappings":"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","file":"workers.js","sourcesContent":["import path from 'path';\nimport child_process from 'child_process';\nimport _ from 'lodash';\nimport log from '../log';\n\nconst logger = log('worker:manager');\n\nexport const workers = [];\n\nconst builds = {};\n\nlet nextWorker = -1;\n\nexport const send = (opts, cb) => {\n  if (!workers.length) {\n    return cb(new Error('No workers available'));\n  }\n\n  if (!builds[opts.buildHash]) {\n    nextWorker++;\n    if (nextWorker >= workers.length) {\n      nextWorker = 0;\n    }\n    let worker = workers[nextWorker];\n    builds[opts.buildHash] = {\n      opts,\n      worker,\n      requests: []\n    };\n  }\n\n  let build = builds[opts.buildHash];\n  build.requests.push(cb);\n\n  logger(`sending build request ${opts.buildHash} to worker ${build.worker.pid}`);\n  build.worker.send(opts);\n};\n\nexport const addWorker = () => {\n  logger('spawning worker');\n  let worker = child_process.fork(\n    path.join(__dirname, 'worker.js')\n  );\n\n  let isReady = false;\n\n  worker.on('message', function(obj) {\n    if (isReady) {\n      let {opts, data} = obj;\n\n      logger(`worker ${worker.pid} responded to build request ${opts.buildHash}`);\n\n      let build = builds[opts.buildHash];\n      let requests = build.requests;\n      build.requests = [];\n\n      requests.forEach(cb => cb(null, data));\n    } else if (obj === 'ready') {\n      isReady = true;\n      workers.push(worker);\n      logger(`worker ${worker.pid} ready`);\n    } else {\n      throw new Error(`Unexpected response from worker: \"${obj}\"`);\n    }\n  });\n\n  worker.on('error', (err) => {\n    logger(`worker process ${worker.pid} error: ${err}`);\n  });\n\n  worker.on('exit', (code) => {\n    logger(`worker process ${worker.pid} exited with code ${code}`);\n    _.remove(workers, worker);\n  });\n};"]}
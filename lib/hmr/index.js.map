{"version":3,"sources":["../../src/hmr/index.js"],"names":[],"mappings":";;;;;;;;;;oBAAiB,MAAM;;;;wBACF,WAAW;;;;uBACP,YAAY;;IAAzB,OAAO;;AAEnB,IAAI,EAAE,GAAG,IAAI,CAAC;;AAEP,IAAM,KAAK,GAAG,SAAR,KAAK,CAAI,MAAM,EAAE,IAAI,EAAK;AACrC,MAAI,GAAG,IAAI,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC;;AAE1C,IAAE,GAAG,2BAAS,MAAM,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;CACrC,CAAC;;QAJW,KAAK,GAAL,KAAK;AAMX,IAAM,IAAI,GAAG,SAAP,IAAI,CAAI,GAAG,EAAE,KAAK,EAAK;AAClC,MACE,KAAK,IACL,KAAK,CAAC,MAAM,IACZ,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,UAAC,KAAK,EAAK;AAC5B,WAAO,CAAC,KAAK,CAAC,OAAO,CAAC;GACvB,CAAC,EACF;AACA,WAAO,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;GAC9B;;AAED,KAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;;AAE7B,MAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3B,OAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;GAClC,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACpC,OAAG,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;GACtC,MAAM;AACL,OAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;GACrB;CACF,CAAC;;QApBW,IAAI,GAAJ,IAAI;AAsBV,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,QAAQ,EAAE,IAAI,EAAK;AAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;AACpC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,MAAM,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;;AAE7B,QAAM,0CAAwC,SAAS,CAAG,CAAC;;AAE3D,KAAG,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,MAAM,EAAK;AAC/B,UAAM,oBAAkB,SAAS,2BAAsB,MAAM,CAAC,EAAE,CAAG,CAAC;;AAEpE,UAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GACpB,CAAC,CAAC;;AAEH,UAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,YAAM;AAC/B,UAAM,oCAAkC,SAAS,CAAG,CAAC;;AAErD,OAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;GACrB,CAAC,CAAC;;AAEH,UAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,UAAC,KAAK,EAAK;AACjC,UAAM,+BAA6B,SAAS,CAAG,CAAC;;AAEhD,QAAI,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;GAC3B,CAAC,CAAC;CACJ,CAAC;QAxBW,YAAY,GAAZ,YAAY","file":"index.js","sourcesContent":["import path from 'path';\nimport socketIo from 'socket.io';\nimport * as options from '../options';\n\nlet io = null;\n\nexport const addTo = (server, path) => {\n  path = path || options.generate().hmrPath;\n\n  io = socketIo(server, {path: path});\n};\n\nexport const send = (nsp, stats) => {\n  if (\n    stats &&\n    stats.assets &&\n    stats.assets.every((asset) => {\n      return !asset.emitted;\n    })\n  ) {\n    return nsp.emit('no-change');\n  }\n\n  nsp.emit('hash', stats.hash);\n\n  if (stats.errors.length > 0) {\n    nsp.emit('errors', stats.errors);\n  } else if (stats.warnings.length > 0) {\n    nsp.emit('warnings', stats.warnings);\n  } else {\n    nsp.emit('success');\n  }\n};\n\nexport const bindCompiler = (compiler, opts) => {\n  const namespace = opts.hmrNamespace;\n  const logger = opts.logger;\n  const nsp = io.of(namespace);\n\n  logger(`bound compiler under hmr namespace: ${namespace}`);\n\n  nsp.on('connection', (socket) => {\n    logger(`hmr namespace ${namespace} opened connection ${socket.id}`);\n\n    socket.emit('hot');\n  });\n\n  compiler.plugin('invalid', () => {\n    logger(`sending hmr invalid signal to ${namespace}`);\n\n    nsp.emit('invalid');\n  });\n\n  compiler.plugin('done', (stats) => {\n    logger(`sending updated stats to ${namespace}`);\n\n    send(nsp, stats.toJson());\n  });\n};"]}
{"version":3,"sources":["../src/build.js"],"names":[],"mappings":";;;;;;;;mBAAgB,OAAO;;;;mBACP,OAAO;;;;uBACH,WAAW;;;;mBACf,OAAO;;;;uBACH,WAAW;;;;wBACV,YAAY;;;;qBACf,SAAS;;;;AAE3B,IAAM,KAAK,GAAG,SAAR,KAAK,CAAI,IAAI,EAAE,EAAE,EAAK;AAC1B,MAAI,GAAG,0BAAQ,IAAI,CAAC,CAAC;;AAErB,MAAI,MAAM,GAAG,sBAAI,OAAO,EAAE,IAAI,CAAC,CAAC;;AAEhC,MAAI,OAAO,GAAG,sBAAS,GAAG,CAAC,IAAI,CAAC,CAAC;AACjC,MAAI,CAAC,OAAO,EAAE;AACZ,UAAM,CAAC,kBAAkB,CAAC,CAAC;AAC3B,WAAO,GAAG,yBAAY,IAAI,CAAC,CAAC;GAC7B;;;AAGD,SAAO,CAAC,QAAQ,CAAC,YAAM;AACrB,UAAM,CAAC,4BAA4B,CAAC,CAAC;AACrC,uBAAM,GAAG,CAAC,IAAI,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE;AAClC,UAAI,GAAG,EAAE;AACP,cAAM,CAAC,yBAAyB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;OAChD;;AAED,UAAI,CAAC,IAAI,EAAE;AACT,cAAM,CAAC,+CAA+C,CAAC,CAAC;AACxD,eAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;OAC7B;;AAED,UAAI,IAAI,CAAC,KAAK,EAAE;AACd,cAAM,CAAC,8BAA8B,CAAC,CAAC;AACvC,eAAO,CAAC,QAAQ,CAAC,YAAM,EAAc,CAAC,CAAC;OACxC;;AAED,YAAM,CAAC,uBAAuB,CAAC,CAAC;AAChC,aAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACvB,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,SAAO,OAAO,CAAC;CAChB,CAAC;;AAEF,KAAK,CAAC,QAAQ,wBAAW,CAAC;AAC1B,KAAK,CAAC,GAAG,mBAAM,CAAC;AAChB,KAAK,CAAC,GAAG,mBAAM,CAAC;;qBAED,KAAK","file":"build.js","sourcesContent":["import hmr from './hmr';\nimport env from './env';\nimport options from './options';\nimport log from './log';\nimport Wrapper from './Wrapper';\nimport wrappers from './wrappers';\nimport cache from './cache';\n\nconst build = (opts, cb) => {\n  opts = options(opts);\n\n  let logger = log('build', opts);\n\n  let wrapper = wrappers.get(opts);\n  if (!wrapper) {\n    logger('creating wrapper');\n    wrapper = new Wrapper(opts);\n  }\n\n  // Defer so that we can return the wrapper before `cb` is called\n  process.nextTick(() => {\n    logger('requesting data from cache');\n    cache.get(opts, function(err, data) {\n      if (err) {\n        logger('cache produced an error', err.message);\n      }\n\n      if (!data) {\n        logger('cache failed to provide data, calling wrapper');\n        return wrapper.onceDone(cb);\n      }\n\n      if (opts.watch) {\n        logger('Ensuring watcher has started');\n        wrapper.onceDone(() => { /* no-op */});\n      }\n\n      logger('serving cached output');\n      return cb(null, data);\n    });\n  });\n\n  return wrapper;\n};\n\nbuild.wrappers = wrappers;\nbuild.hmr = hmr;\nbuild.env = env;\n\nexport default build;"]}
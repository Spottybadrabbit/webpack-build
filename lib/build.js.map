{"version":3,"sources":["../src/build.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;sBACL,QAAQ;;;;uBACF,WAAW;;;;mBACf,OAAO;;;;wBACF,YAAY;;;;qBACf,SAAS;;;;AAE3B,IAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAE3C,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAI,UAAU,EAAK;AACtC,MAAI,CAAC,UAAU,EAAE;AACf,WAAO,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;GAC7C;;AAED,MAAI,CAAC,oBAAE,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC3B,WAAO,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;GACzD;;AAED,MAAI,cAAc,CAAC,UAAU,CAAC,EAAE;AAC9B,QAAI,SAAS,YAAA,CAAC;AACd,QAAI;AACF,eAAS,GAAG,CAAC,gBAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;KAC5C,CAAC,OAAM,GAAG,EAAE;AACX,aAAO,GAAG,CAAC;KACZ;;AAED,QAAI,SAAS,GAAG,cAAc,CAAC,UAAU,CAAC,EAAE;AAC1C,aAAO,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;KACjG;GACF,MAAM;AACL,QAAI;AACF,aAAO,CAAC,UAAU,CAAC,CAAC;KACrB,CAAC,OAAM,GAAG,EAAE;AACX,aAAO,GAAG,CAAC;KACZ;;AAED,QAAI;AACF,oBAAc,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;KAC7D,CAAC,OAAM,GAAG,EAAE;AACX,aAAO,GAAG,CAAC;KACZ;GACF;CACF,CAAC;;AAEF,IAAM,KAAK,GAAG,SAAR,KAAK,CAAI,IAAI,EAAE,EAAE,EAAK;AAC1B,MAAI,GAAG,0BAAQ,IAAI,CAAC,CAAC;;AAErB,MAAI,MAAM,GAAG,sBAAI,OAAO,EAAE,IAAI,CAAC,CAAC;AAChC,QAAM,+BAA6B,IAAI,CAAC,MAAM,CAAG,CAAC;;AAElD,QAAM,CAAC,4BAA4B,CAAC,CAAC;AACrC,qBAAM,GAAG,CAAC,IAAI,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE;AAClC,QAAI,GAAG,EAAE;AACP,YAAM,CAAC,yBAAyB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;KAChD;;AAED,QAAI,IAAI,EAAE;AACR,YAAM,CAAC,uBAAuB,CAAC,CAAC;AAChC,QAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAChB,MAAM;AACL,YAAM,CAAC,8DAA8D,CAAC,CAAC;KACxE;;AAED,QAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;;AAEvB,YAAM,6BAA2B,IAAI,CAAC,MAAM,CAAG,CAAC;AAChD,UAAI,SAAS,GAAG,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACjD,UAAI,SAAS,EAAE;AACb,cAAM,oDAAkD,IAAI,CAAC,MAAM,EAAI,SAAS,CAAC,KAAK,CAAC,CAAC;AACxF,eAAO,EAAE,CAAC,SAAS,CAAC,CAAC;OACtB;;AAED,UAAI,OAAO,GAAG,sBAAS,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEjC,UAAI,CAAC,IAAI,EAAE;AACT,eAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;OAC7B;;AAED,UAAI,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AAClC,cAAM,CAAC,oCAAoC,CAAC,CAAC;AAC7C,eAAO,CAAC,eAAe,CAAC,YAAM,EAAc,CAAC,CAAC;OAC/C;KACF;GACF,CAAC,CAAC;CACJ,CAAC;;qBAEa,KAAK","file":"build.js","sourcesContent":["import fs from 'fs';\nimport _ from 'lodash';\nimport options from './options';\nimport log from './log';\nimport wrappers from './wrappers';\nimport cache from './cache';\n\nconst fileTimestamps = Object.create(null);\n\nconst checkConfigfile = (configFile) => {\n  if (!configFile) {\n    return new Error('Config file not defined');\n  }\n\n  if (!_.isString(configFile)) {\n    return new Error('Config file option must be a string');\n  }\n\n  if (fileTimestamps[configFile]) {\n    let timestamp;\n    try {\n      timestamp = +fs.statSync(configFile).mtime;\n    } catch(err) {\n      return err;\n    }\n\n    if (timestamp > fileTimestamps[configFile]) {\n      return new Error('Config file has changed since being loaded into memory. Restart the process');\n    }\n  } else {\n    try {\n      require(configFile);\n    } catch(err) {\n      return err;\n    }\n\n    try {\n      fileTimestamps[configFile] = +fs.statSync(configFile).mtime;\n    } catch(err) {\n      return err;\n    }\n  }\n};\n\nconst build = (opts, cb) => {\n  opts = options(opts);\n\n  let logger = log('build', opts);\n  logger(`build request lodged for ${opts.config}`);\n\n  logger('requesting data from cache');\n  cache.get(opts, function(err, data) {\n    if (err) {\n      logger('cache produced an error', err.message);\n    }\n\n    if (data) {\n      logger('serving cached output');\n      cb(null, data);\n    } else {\n      logger('cache has no matching data or has delegated, calling wrapper');\n    }\n\n    if (!data || opts.watch) {\n      // Ensure that the imported version of the config file is fresh\n      logger(`checking timestamps on ${opts.config}`);\n      let configErr = checkConfigfile(opts.config, cb);\n      if (configErr) {\n        logger(`error encountered when checking timestamps on ${opts.config}`, configErr.stack);\n        return cb(configErr);\n      }\n\n      let wrapper = wrappers.get(opts);\n\n      if (!data) {\n        return wrapper.onceDone(cb);\n      }\n\n      if (opts.watch && !wrapper.watcher) {\n        logger('Starting watcher in the background');\n        wrapper.onceWatcherDone(() => { /* no-op */});\n      }\n    }\n  });\n};\n\nexport default build;"]}
{"version":3,"sources":["../src/build.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;sBACL,QAAQ;;;;uBACF,WAAW;;;;mBACf,OAAO;;;;wBACF,YAAY;;;;sBACd,UAAU;;;;sCACD,2BAA2B;;;;uBACnC,WAAW;;;;AAExB,IAAM,OAAO,GAAG,SAAV,OAAO,CAAI,IAAI,EAAE,EAAE,EAAK;AACnC,MAAI,GAAG,0BAAQ,IAAI,CAAC,CAAC;;AAErB,MAAI,MAAM,GAAG,sBAAI,SAAS,EAAE,IAAI,CAAC,CAAC;AAClC,QAAM,YAAU,IAAI,CAAC,SAAS,gBAAa,CAAC;;;AAG5C,QAAM,6BAA2B,IAAI,CAAC,MAAM,CAAG,CAAC;AAChD,MAAI,SAAS,GAAG,yCAAgB,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACjD,MAAI,SAAS,EAAE;AACb,UAAM,oDAAkD,IAAI,CAAC,MAAM,EAAI,SAAS,CAAC,KAAK,CAAC,CAAC;AACxF,WAAO,EAAE,CAAC,SAAS,CAAC,CAAC;GACtB;;AAED,MAAI,OAAO,GAAG,sBAAS,GAAG,CAAC,IAAI,CAAC,CAAC;AACjC,SAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;CACtB,CAAC;;QAhBW,OAAO,GAAP,OAAO;AAkBpB,IAAM,KAAK,GAAG,SAAR,KAAK,CAAI,IAAI,EAAE,EAAE,EAAK;AAC1B,MAAI,GAAG,0BAAQ,IAAI,CAAC,CAAC;;AAErB,MAAI,MAAM,GAAG,sBAAI,OAAO,EAAE,IAAI,CAAC,CAAC;AAChC,QAAM,YAAU,IAAI,CAAC,SAAS,gBAAa,CAAC;;AAE5C,MAAI,IAAI,GAAG,SAAP,IAAI,CAAI,GAAG,EAAE,IAAI,EAAK;AACxB,QAAI,GAAG,EAAE,MAAM,CAAC,gCAAgC,EAAE,GAAG,CAAC,CAAC,KAClD,MAAM,CAAC,yBAAyB,CAAC,CAAC;;AAEvC,MAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;GACf,CAAC;;AAEF,QAAM,CAAC,6BAA6B,CAAC,CAAC;AACtC,sBAAO,GAAG,CAAC,IAAI,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE;AACnC,QAAI,GAAG,EAAE;AACP,YAAM,CAAC,yBAAyB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;KAChD;;AAED,QAAI,IAAI,EAAE;AACR,YAAM,CAAC,sBAAsB,CAAC,CAAC;AAC/B,UAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAClB,MAAM;AACL,YAAM,CAAC,kEAAkE,CAAC,CAAC;KAC5E;;AAED,QAAI,CAAC,IAAI,EAAE;AACT,UAAI,qBAAQ,SAAS,EAAE,EAAE;AACvB,cAAM,CAAC,+BAA+B,CAAC,CAAC;AACxC,6BAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;OAC3B,MAAM;AACL,cAAM,CAAC,+BAA+B,CAAC,CAAC;AACxC,eAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;OACrB;KACF,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;AACrB,YAAM,CAAC,gDAAgD,CAAC,CAAC;AACzD,UAAI,IAAI,GAAG,SAAP,IAAI,GAAS,EAAa,CAAC;AAC/B,UAAI,qBAAQ,SAAS,EAAE,EAAE;AACvB,6BAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;OAC3B,MAAM;AACL,eAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;OACrB;KACF;GACF,CAAC,CAAC;CACJ,CAAC;;qBAEa,KAAK","file":"build.js","sourcesContent":["import fs from 'fs';\nimport _ from 'lodash';\nimport options from './options';\nimport log from './log';\nimport wrappers from './wrappers';\nimport caches from './caches';\nimport checkConfigFile from './utils/check_config_file';\nimport workers from './workers';\n\nexport const compile = (opts, cb) => {\n  opts = options(opts);\n\n  let logger = log('compile', opts);\n  logger(`build ${opts.buildHash} requested`);\n\n  // Ensure that the imported version of the config file is fresh\n  logger(`checking timestamps on ${opts.config}`);\n  let configErr = checkConfigFile(opts.config, cb);\n  if (configErr) {\n    logger(`error encountered when checking timestamps on ${opts.config}`, configErr.stack);\n    return cb(configErr);\n  }\n\n  let wrapper = wrappers.get(opts);\n  wrapper.onceDone(cb);\n};\n\nconst build = (opts, cb) => {\n  opts = options(opts);\n\n  let logger = log('build', opts);\n  logger(`build ${opts.buildHash} requested`);\n\n  let emit = (err, data) => {\n    if (err) logger('error encountered during build', err);\n    else logger('serving data from build');\n\n    cb(err, data);\n  };\n\n  logger('requesting data from caches');\n  caches.get(opts, function(err, data) {\n    if (err) {\n      logger('cache produced an error', err.message);\n    }\n\n    if (data) {\n      logger('cached data received');\n      emit(null, data);\n    } else {\n      logger('cache has no matching data or has delegated, passing to compiler');\n    }\n\n    if (!data) {\n      if (workers.available()) {\n        logger('Requesting build from workers');\n        workers.build(opts, emit);\n      } else {\n        logger('Requesting build from compile');\n        compile(opts, emit);\n      }\n    } else if (opts.watch) {\n      logger('Ensuring compiler is running in the background');\n      let noop = () => {/* no-op */};\n      if (workers.available()) {\n        workers.build(opts, noop);\n      } else {\n        compile(opts, noop);\n      }\n    }\n  });\n};\n\nexport default build;"]}
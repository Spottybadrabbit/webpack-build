{"version":3,"sources":["../../src/workers/entry.js"],"names":[],"mappings":";;;;gCAA6B,oBAAoB;;;;uBAGzB,eAAe;;;;;;;;mBAMvB,QAAQ;;;;qBACF,UAAU;;iCACR,uBAAuB;;;;AAV/C,8BAAiB,OAAO,EAAE,CAAC;;AAY3B,iBAAI,SAAS,iBAAe,OAAO,CAAC,GAAG,AAAE,CAAC;;AAE1C,IAAI,MAAM,GAAG,uBAAK,CAAC;;AAEnB,MAAM,CAAC,OAAO,CAAC,CAAC;;AAEhB,OAAO,CAAC,IAAI,CAAC;AACX,MAAI,EAAE,OAAO;CACd,CAAC,CAAC;;AAEH,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,GAAG,EAAE;MAC7B,IAAI,GAAU,GAAG,CAAjB,IAAI;MAAE,IAAI,GAAI,GAAG,CAAX,IAAI;;AAEf,MAAI,IAAI,KAAK,QAAQ,EAAE;AACrB,UAAM,2BAA2B,CAAC;AAClC,WAAO,CAAC,IAAI,CAAC;AACX,UAAI,EAAE,QAAQ;AACd,UAAI,EAAE,IAAI;KACX,CAAC,CAAC;GACJ,MAAM,IAAI,IAAI,KAAK,OAAO,EAAE;AAC3B,UAAM,iCAA+B,IAAI,CAAC,SAAS,CAAG,CAAC;;AAEvD,eAzBI,OAAO,EAyBH,IAAI,EAAE,UAAC,GAAG,EAAE,KAAK,EAAK;AAC5B,aAAO,CAAC,IAAI,CAAC;AACX,YAAI,EAAE,OAAO;AACb,YAAI,EAAE;AACJ,mBAAS,EAAE,IAAI,CAAC,SAAS;AACzB,mBAAS,EAAE,oCAAY,GAAG,EAAE,KAAK,CAAC;SACnC;OACF,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,MAAM;AACL,UAAM,IAAI,KAAK,+BAA6B,GAAG,CAAG,CAAC;GACpD;CACF,CAAC,CAAC","file":"entry.js","sourcesContent":["import sourceMapSupport from 'source-map-support';\nsourceMapSupport.install();\n\nimport packageJson from '../../package';\n\n// TODO: a debug-entry.js file which activates this (needed for a `--debug` arg on the server\n//import debug from 'debug';\n//debug.enable(packageJson.name + ':*');\n\nimport log from '../log';\nimport {compile} from '../build';\nimport processData from '../utils/process_data';\n\nlog.namespace += `:worker:${process.pid}`;\n\nlet logger = log();\n\nlogger('ready');\n\nprocess.send({\n  type: 'ready'\n});\n\nprocess.on('message', function(msg) {\n  let {type, data} = msg;\n\n  if (type === 'status') {\n    logger(`status request received`);\n    process.send({\n      type: 'status',\n      data: 'ok'\n    });\n  } else if (type === 'build') {\n    logger(`build request received for ${data.buildHash}`);\n\n    compile(data, (err, _data) => {\n      process.send({\n        type: 'build',\n        data: {\n          buildHash: data.buildHash,\n          buildData: processData(err, _data)\n        }\n      });\n    });\n  } else {\n    throw new Error(`Unknown request received ${msg}`);\n  }\n});\n"]}
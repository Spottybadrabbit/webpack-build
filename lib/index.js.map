{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;mBAAgB,OAAO;;;;mBACP,OAAO;;;;uBACH,WAAW;;;;uBACX,WAAW;;;;mBACf,OAAO;;;;2BACQ,eAAe;;AAE9C,IAAM,QAAQ,GAAG,iBAFT,QAAQ,EAEe,CAAC;AAChC,IAAM,MAAM,GAAG,iBAHG,MAAM,EAGG,CAAC;;AAE5B,IAAM,KAAK,GAAG,SAAR,KAAK,CAAI,IAAI,EAAE,EAAE,EAAK;AAC1B,MAAI,GAAG,0BAAQ,IAAI,CAAC,CAAC;;AAErB,MAAI,MAAM,GAAG,sBAAI,OAAO,EAAE,IAAI,CAAC,CAAC;;AAEhC,MAAI,KAAK,YAAA,CAAC;AACV,MAAI,IAAI,CAAC,KAAK,EAAE;AACd,UAAM,CAAC,eAAe,CAAC,CAAC;AACxB,SAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;GAC1B;;AAED,MAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;;AAGxC,SAAO,CAAC,QAAQ,CAAC,YAAM;AACrB,QAAI,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE;AAC5B,UAAI,KAAK,CAAC,QAAQ,EAAE;AAClB,cAAM,CAAC,gCAAgC,CAAC,CAAC;OAC1C;;AAED,aAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KACtB,MAAM;AACL,YAAM,CAAC,4BAA4B,CAAC,CAAC;;AAErC,WAAK,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,IAAI,EAAK;AACvB,YAAI,GAAG,EAAE;AACP,gBAAM,CAAC,aAAa,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;AACnC,iBAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC7B;;AAED,YAAI,CAAC,IAAI,EAAE;AACT,gBAAM,CAAC,+CAA+C,CAAC,CAAC;AACxD,iBAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC7B;;AAED,YAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;AAC3B,gBAAM,mBAAiB,IAAI,CAAC,IAAI,mCAAgC,CAAC;;AAEjE,eAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAChB,iBAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC7B;;AAED,YAAI,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACrC,gBAAM,CAAC,kBAAkB,CAAC,CAAC;;;AAG3B,iBAAO,CAAC,QAAQ,CAAC,YAAM,EAAc,CAAC,CAAC;SACxC;;AAED,cAAM,CAAC,uBAAuB,CAAC,CAAC;;AAEhC,UAAE,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;OACtB,CAAC,CAAC;KACJ;GACF,CAAC,CAAC;;AAEH,SAAO,OAAO,CAAC;CAChB,CAAC;;AAEF,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACtB,KAAK,CAAC,GAAG,mBAAM,CAAC;AAChB,KAAK,CAAC,GAAG,mBAAM,CAAC;;qBAED,KAAK","file":"index.js","sourcesContent":["import hmr from './hmr';\nimport env from './env';\nimport Wrapper from './Wrapper';\nimport options from './options';\nimport log from './log';\nimport {Wrappers, Caches} from './collections';\n\nconst wrappers = new Wrappers();\nconst caches = new Caches();\n\nconst build = (opts, cb) => {\n  opts = options(opts);\n\n  let logger = log('build', opts);\n\n  let cache;\n  if (opts.cache) {\n    logger('cache enabled');\n    cache = caches.get(opts);\n  }\n\n  let wrapper = wrappers.get(opts, cache);\n\n  // Defer so that we can return the wrapper before `cb` is called\n  process.nextTick(() => {\n    if (!cache || cache.delegate) {\n      if (cache.delegate) {\n        logger('cache has delegated to wrapper');\n      }\n\n      wrapper.onceDone(cb);\n    } else {\n      logger('requesting data from cache');\n\n      cache.get((err, data) => {\n        if (err) {\n          logger('cache error', err.message);\n          return wrapper.onceDone(cb);\n        }\n\n        if (!data) {\n          logger('cache failed to provide data, calling wrapper');\n          return wrapper.onceDone(cb);\n        }\n\n        if (data.hash !== opts.hash) {\n          logger(`cached hash \"${data.hash}\" does not match the expected`);\n\n          cache.set(null);\n          return wrapper.onceDone(cb);\n        }\n\n        if (opts.watch && !wrapper.isWatching) {\n          logger('starting watcher');\n\n          // Start the watcher\n          wrapper.onceDone(() => { /* no-op */});\n        }\n\n        logger('serving cached output');\n\n        cb(null, data.stats);\n      });\n    }\n  });\n\n  return wrapper;\n};\n\nbuild.wrappers = wrappers;\nbuild.caches = caches;\nbuild.hmr = hmr;\nbuild.env = env;\n\nexport default build;"]}
{"version":3,"sources":["../../src/utils/check_config_file.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;sBACL,QAAQ;;;;AAEtB,IAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAE3C,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAI,IAAI,EAAK;AAChC,MAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;;AAE7B,MAAI,CAAC,UAAU,EAAE;AACf,WAAO,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;GAC7C;;AAED,MAAI,CAAC,oBAAE,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC3B,WAAO,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;GACpD;;AAED,MAAI,cAAc,CAAC,UAAU,CAAC,EAAE;AAC9B,QAAI,SAAS,YAAA,CAAC;AACd,QAAI;AACF,eAAS,GAAG,CAAC,gBAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;KAC5C,CAAC,OAAM,GAAG,EAAE;AACX,aAAO,GAAG,CAAC;KACZ;;AAED,QAAI,SAAS,GAAG,cAAc,CAAC,UAAU,CAAC,EAAE;AAC1C,aAAO,IAAI,KAAK,CACd,oHAAoH,CACrH,CAAC;KACH;GACF,MAAM;AACL,QAAI;AACF,aAAO,CAAC,UAAU,CAAC,CAAC;KACrB,CAAC,OAAM,GAAG,EAAE;AACX,aAAO,GAAG,CAAC;KACZ;;AAED,QAAI,SAAS,YAAA,CAAC;AACd,QAAI;AACF,eAAS,GAAG,CAAC,gBAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;KAC5C,CAAC,OAAM,GAAG,EAAE;AACX,aAAO,GAAG,CAAC;KACZ;;AAED,kBAAc,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC;GACxC;CACF,CAAC;;qBAEa,eAAe","file":"check_config_file.js","sourcesContent":["import fs from 'fs';\nimport _ from 'lodash';\n\nconst fileTimestamps = Object.create(null);\n\nconst checkConfigFile = (opts) => {\n  let configFile = opts.config;\n\n  if (!configFile) {\n    return new Error('Config file not defined');\n  }\n\n  if (!_.isString(configFile)) {\n    return new Error('Config option must be a string');\n  }\n\n  if (fileTimestamps[configFile]) {\n    let timestamp;\n    try {\n      timestamp = +fs.statSync(configFile).mtime;\n    } catch(err) {\n      return err;\n    }\n\n    if (timestamp > fileTimestamps[configFile]) {\n      return new Error(\n        'Config file has changed since being loaded into memory, the process will need to be restarted to apply the changes'\n      );\n    }\n  } else {\n    try {\n      require(configFile);\n    } catch(err) {\n      return err;\n    }\n\n    let timestamp;\n    try {\n      timestamp = +fs.statSync(configFile).mtime;\n    } catch(err) {\n      return err;\n    }\n\n    fileTimestamps[configFile] = timestamp;\n  }\n};\n\nexport default checkConfigFile;"]}
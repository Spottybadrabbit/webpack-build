{"version":3,"sources":["../src/compile.js"],"names":[],"mappings":";;;;;;;;uBAAoB,WAAW;;;;mBACf,OAAO;;;;wBACF,YAAY;;;;sCACL,2BAA2B;;;;AAEhD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAI,IAAI,EAAE,EAAE,EAAK;AACnC,MAAI,GAAG,0BAAQ,IAAI,CAAC,CAAC;;AAErB,MAAI,MAAM,GAAG,sBAAI,SAAS,EAAE,IAAI,CAAC,CAAC;AAClC,QAAM,YAAU,IAAI,CAAC,SAAS,gBAAa,CAAC;;;AAG5C,QAAM,6BAA2B,IAAI,CAAC,MAAM,CAAG,CAAC;AAChD,MAAI,SAAS,GAAG,yCAAgB,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACjD,MAAI,SAAS,EAAE;AACb,UAAM,oDAAkD,IAAI,CAAC,MAAM,EAAI,SAAS,CAAC,KAAK,CAAC,CAAC;AACxF,WAAO,EAAE,CAAC,SAAS,CAAC,CAAC;GACtB;;AAED,MAAI,OAAO,GAAG,sBAAS,GAAG,CAAC,IAAI,CAAC,CAAC;AACjC,SAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;CACtB,CAAC;;QAhBW,OAAO,GAAP,OAAO;qBAkBL,OAAO","file":"compile.js","sourcesContent":["import options from './options';\nimport log from './log';\nimport wrappers from './wrappers';\nimport checkConfigFile from './utils/check_config_file';\n\nexport const compile = (opts, cb) => {\n  opts = options(opts);\n\n  let logger = log('compile', opts);\n  logger(`build ${opts.buildHash} requested`);\n\n  // Ensure that the imported version of the config file is fresh\n  logger(`checking timestamps on ${opts.config}`);\n  let configErr = checkConfigFile(opts.config, cb);\n  if (configErr) {\n    logger(`error encountered when checking timestamps on ${opts.config}`, configErr.stack);\n    return cb(configErr);\n  }\n\n  let wrapper = wrappers.get(opts);\n  wrapper.onceDone(cb);\n};\n\nexport default compile;"]}